apiVersion: v1
kind: ConfigMap
metadata:
  name: openfga-config
  namespace: otel-fga
data:
  openfga_model.json: |
    {
      "schema_version": "1.1",
      "type_definitions": [
        {
          "type": "user",
          "relations": {}
        },
        {
          "type": "document",
          "relations": {
            "can_access": {
              "this": {}
            }
          },
          "metadata": {
            "relations": {
              "can_access": {
                "directly_related_user_types": [
                  {
                    "type": "user"
                  }
                ]
              }
            }
          }
        }
      ]
    }
  init_openfga.sh: |
    #!/bin/bash
    echo "Waiting for OpenFGA to be ready..."
    until curl -s http://openfga:8080 > /dev/null; do
        sleep 1
    done
    echo "OpenFGA is ready."
    echo "Creating OpenFGA store..."
    STORE_RESPONSE=$(curl -s -X POST http://openfga:8080/stores -H "Content-Type: application/json" -d '{"name":"my-store"}')
    STORE_ID=$(echo $STORE_RESPONSE | grep -o '"id":"[^"]*' | cut -d'"' -f4)
    if [ -z "$STORE_ID" ]; then
        echo "Failed to create store. Response: $STORE_RESPONSE"
        exit 1
    fi
    echo "Store created with ID: $STORE_ID"
    echo "Applying authorization model..."
    MODEL_RESPONSE=$(curl -s -X POST http://openfga:8080/stores/$STORE_ID/authorization-models -H "Content-Type: application/json" -d @/openfga_model.json)
    MODEL_ID=$(echo $MODEL_RESPONSE | grep -o '"authorization_model_id":"[^"]*' | cut -d'"' -f4)
    if [ -z "$MODEL_ID" ]; then
        echo "Failed to apply model. Response: $MODEL_RESPONSE"
        exit 1
    fi
    echo "Model applied with ID: $MODEL_ID"
    echo "Writing tuples..."
    curl -s -X POST http://openfga:8080/stores/$STORE_ID/write -H "Content-Type: application/json" -d '{
        "writes": {
            "tuple_keys": [
                {
                    "user": "user:alice",
                    "relation": "can_access",
                    "object": "document:123"
                }
            ]
        }
    }'
    echo "Tuples written."
  store.fga.yaml: |
    model: |
      model
        schema 1.1
      type user
      type document
        relations
          define can_access: [user]
    tuples:
      - user: user:alice
        relation: can_access
        object: document:123
    tests:
      - name: Test access for document:123
        check:
          - user: user:alice
            object: document:123
            assertions:
              can_access: true
          - user: user:bob
            object: document:123
            assertions:
              can_access: false
      - name: Test documents alice can access
        list_objects:
          - user: user:alice
            type: document
            assertions:
              can_access:
                - document:123
      - name: Test users who can access document:123
        list_users:
          - object: document:123
            user_filter:
              - type: user
            assertions:
              can_access:
                users:
                  - user:alice